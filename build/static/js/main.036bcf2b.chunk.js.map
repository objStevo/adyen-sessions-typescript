{"version":3,"sources":["assets/adyen-header-logo-green.svg","components/Header/Header.tsx","components/PaymentsForm/PaymentsForm.tsx","config.js","hooks/useStartSession.ts","hooks/useMemoCompare.ts","helpers/index.ts","components/ComponentBase/Component.tsx","hooks/useCheckout.ts","components/ComponentBase/ComponentBase.tsx","AppRouter.tsx","App.tsx","index.tsx"],"names":["Header","id","color","dark","expand","href","width","height","src","AdyenLogo","alt","PaymentsForm","options","value","currency","countryCode","component","onSubmit","onChange","handleChange","e","preventDefault","for","type","name","selected","style","RETURN_URL","process","API_URL","CLIENT_KEY","REACT_APP_CLIENT_KEY","ENVIRONMENT","REACT_APP_ENVIRONMENT","MERCHANT_ACCOUNT","REACT_APP_USER_LOCALE","REACT_APP_MERCHANT_ACCOUNT","useStartSession","console","log","useState","sessionInfo","setSessionInfo","opts","next","previousRef","useRef","previous","current","isEqual","prev","valueMatch","currencyMatch","compareFormData","useEffect","useMemoCompare","paymentData","merchantAccount","amount","returnUrl","reference","Math","floor","random","requestOptions","method","headers","body","JSON","stringify","startSession","a","fetch","response","json","parsed","error","Component","sessionId","sessionData","redirectResult","checkout","setCheckout","configuration","environment","clientKey","session","onPaymentCompleted","result","info","onError","message","stack","initializeCheckout","config","AdyenCheckout","submitDetails","details","useCheckout","create","mount","ComponentBase","useParams","ApplicationRouter","path","element","Application","setOptions","navigate","useNavigate","prevState","target","rootElement","document","getElementById","render","App"],"mappings":"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","file":"static/js/main.036bcf2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/adyen-header-logo-green.b4f6545a.svg\";","import {\r\n  Navbar,\r\n  NavbarBrand\r\n} from \"reactstrap\";\r\nimport \"./Header.scss\";\r\n\r\nimport AdyenLogo from \"../../assets/adyen-header-logo-green.svg\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div id=\"header\">\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand href=\"/\" id=\"adyen-logo\">\r\n          <img width=\"150px\" height=\"auto\" src={AdyenLogo} alt=\"logo\" />\r\n        </NavbarBrand>\r\n      </Navbar>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { PaymentsFormProps } from \"../../types\";\r\n\r\nconst PaymentsForm = ({ options: { value, currency, countryCode, component }, onSubmit, onChange }: PaymentsFormProps) => {\r\n  \r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    onSubmit();\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange(e);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <Label for=\"value\">Amount Value</Label>\r\n        <Input type=\"number\" name=\"value\" value={value} onChange={handleChange}></Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"currency\">Currency</Label>\r\n        <Input type=\"select\" name=\"currency\" onChange={handleChange} selected={currency}>\r\n          <option value=\"EUR\">EUR</option>\r\n          <option value=\"USD\">USD</option>\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"countryCode\">Country Code</Label>\r\n        <Input name=\"countryCode\" value={countryCode} onChange={handleChange}></Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"currency\">Type</Label>\r\n        <Input type=\"select\" name=\"component\" onChange={handleChange} selected={component}>\r\n          {/* TODO: Base these options off of paymentMethods response */}\r\n          <option value=\"dropin\">Drop-in</option>\r\n          <option value=\"card\">Credit Cards</option>\r\n          <option value=\"paypal\">Pay Pal</option>\r\n        </Input>\r\n      </FormGroup>\r\n      <div style={{\"marginTop\": \"10px\", \"textAlign\": \"right\"}}>\r\n        <Button type=\"submit\" color=\"primary\" >Submit</Button>\r\n      </div>\r\n    </Form>\r\n  )\r\n};\r\n\r\nexport default PaymentsForm;","export const API_URL = process.env.API_URL || 'http://localhost:8080';\r\nexport const RETURN_URL = process.env.RETURN_URL || 'http://localhost:8080';\r\nexport const CLIENT_KEY = process.env.REACT_APP_CLIENT_KEY || 'test_CTOT7ZHBDVAHBHIABJ63CUQW7QMVDQFD';\r\nexport const ENVIRONMENT = process.env.REACT_APP_ENVIRONMENT || 'test';\r\nexport const USER_LOCALE = process.env.REACT_APP_USER_LOCALE || 'en-US';\r\nexport const MERCHANT_ACCOUNT = process.env.REACT_APP_MERCHANT_ACCOUNT || 'MikeOssig';","import { useState, useEffect } from 'react';\r\nimport { useMemoCompare } from './useMemoCompare';\r\nimport { MERCHANT_ACCOUNT, RETURN_URL } from '../config';\r\n\r\nexport const useStartSession = (options: { value: number, currency: string, countryCode: string } ) => {\r\n  console.log('Starting session with params', options);\r\n  const [sessionInfo, setSessionInfo] = useState<any>(null);\r\n\r\n  const opts = useMemoCompare(options);\r\n\r\n  useEffect(() => {\r\n    const paymentData = {\r\n      merchantAccount: MERCHANT_ACCOUNT,\r\n      amount: {\r\n        value: options.value * 100,\r\n        currency: options.currency\r\n      },\r\n      returnUrl: RETURN_URL,\r\n      reference: Math.floor(Math.random() * 100000000),\r\n      countryCode: options.countryCode\r\n    }\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(paymentData)\r\n    }\r\n\r\n    const startSession = async () => {\r\n      console.log('calling server');\r\n      try {\r\n        const response = await fetch('http://localhost:8080/startSession', requestOptions);\r\n\r\n        const parsed = await response.json();\r\n        console.log('sessionsResponse', parsed);\r\n        setSessionInfo(parsed);\r\n      } catch (err) {\r\n        if (err && typeof err === 'object'){\r\n          console.error('Error', err);\r\n        } else {\r\n          console.error('Something went wrong');\r\n        }\r\n      }\r\n    };\r\n\r\n    startSession();\r\n  }, [opts]);\r\n\r\n  return [sessionInfo];\r\n};","import { useRef, useEffect } from \"react\";\r\nimport { compareFormData } from \"../helpers\";\r\n\r\nexport const useMemoCompare = (next:any) => {\r\n\r\n  const previousRef = useRef();\r\n  const previous = previousRef.current;\r\n\r\n  const isEqual = compareFormData(previous, next);\r\n\r\n  useEffect(() => {\r\n    if (!isEqual) {\r\n      previousRef.current = next;\r\n    }\r\n  });\r\n\r\n  return isEqual ? previous : next;\r\n}","import { FormDataProps } from \"../types\";\r\n\r\nexport const compareFormData = (prev: any, next: FormDataProps) => {\r\n  if (!prev) {\r\n    return false;\r\n  };\r\n  \r\n  const valueMatch = prev.value && prev.value === next.value;\r\n  const currencyMatch = prev.currency && prev.currency === next.currency;\r\n  const countryCodeMatch = prev.countryCode && prev.countryCode === next.countryCode;\r\n\r\n  return countryCodeMatch && currencyMatch && valueMatch;\r\n};","import { useCheckout } from \"../../hooks\";\r\n\r\nconst Component = ({type, sessionId, sessionData}: {type:string, sessionId: string, sessionData: string}) => {\r\n  const [checkout] = useCheckout(sessionId, sessionData);\r\n  console.log(type);\r\n  if(checkout) {\r\n    checkout.create(type).mount(\"#checkout\");\r\n  }\r\n  return <div id=\"checkout\"></div>;\r\n};\r\n\r\nexport default Component;","import { useState, useEffect } from 'react';\r\nimport AdyenCheckout from '@adyen/adyen-web';\r\nimport { CLIENT_KEY, ENVIRONMENT } from '../config';\r\n\r\nexport const useCheckout = (sessionId: string, sessionData: string, redirectResult?: string) => {\r\n  const [checkout, setCheckout] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    const configuration = {\r\n      environment: ENVIRONMENT, // Change to 'live' for the live environment.\r\n      clientKey: CLIENT_KEY, // Public key used for client-side authentication: https://docs.adyen.com/development-resources/client-side-authentication\r\n      session: {\r\n        id: sessionId, // Unique identifier for the payment session.\r\n        sessionData, // The payment session data.\r\n      },\r\n      onPaymentCompleted: (result: any, component: any) => {\r\n          console.info(result, component);\r\n      },\r\n      onError: (error:any, component:any): void => {\r\n          console.error(error.name, error.message, error.stack, component);\r\n      }\r\n    };\r\n    const initializeCheckout = async (config: object) => {\r\n      const component = await AdyenCheckout(config);\r\n      if (redirectResult) {\r\n        console.log('redirectResult found', redirectResult)\r\n        component.submitDetails({ details: { redirectResult } });\r\n      };\r\n  \r\n      setCheckout(component);\r\n    };\r\n\r\n    initializeCheckout(configuration);\r\n  }, [sessionId, sessionData, redirectResult]);\r\n\r\n  console.log(checkout)\r\n  return [checkout];\r\n};","import { useParams } from \"react-router-dom\";\r\nimport { useStartSession } from \"../../hooks\";\r\nimport { FormDataProps } from \"../../types\";\r\nimport Component from \"./Component\";\r\n\r\nconst ComponentBase = ({ value, currency, countryCode }: FormDataProps) => {\r\n  const params = useParams();\r\n  const component = params.component;\r\n  const [ sessionInfo ] = useStartSession({ value, currency, countryCode });\r\n  if (sessionInfo && component){\r\n    console.log(sessionInfo);\r\n    return <Component type={component} sessionId={sessionInfo.id} sessionData={sessionInfo.sessionData}/>;\r\n  }\r\n  return <div>Something is wrong here...</div>\r\n};\r\n\r\nexport default ComponentBase;","import { Route, Routes } from \"react-router-dom\";\r\nimport { PaymentsFormProps } from \"./types\"\r\nimport { PaymentsForm, ComponentBase} from \"./components\";\r\n\r\nconst ApplicationRouter = ({ options, onSubmit, onChange }: PaymentsFormProps) => {\r\n\r\n  return (\r\n    <Routes>\r\n      <Route \r\n        path=\"/\" \r\n        element={\r\n          <PaymentsForm\r\n            options={options}\r\n            onSubmit={onSubmit}\r\n            onChange={onChange}\r\n          />\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/components/:component\"\r\n        element={\r\n          <ComponentBase {...options} />\r\n        }\r\n      />\r\n    </Routes>\r\n  )\r\n};\r\n\r\nexport default ApplicationRouter;","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Header } from \"./components\"\r\nimport ApplicationRouter from \"./AppRouter\";\r\n\r\nconst Application = () => {\r\n  const [options, setOptions] = useState({\r\n    value: 25,\r\n    currency: \"EUR\",\r\n    countryCode: \"NL\",\r\n    component: \"dropin\"\r\n  });\r\n  const navigate = useNavigate();\r\n  \r\n  const handleSubmit = () => {\r\n    navigate(\"/components/\" + options.component);\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setOptions(prevState => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <Header />\r\n      <ApplicationRouter \r\n        onSubmit={handleSubmit}\r\n        onChange={handleChange}\r\n        options={options}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Application;","import { render } from \"react-dom\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport \"@adyen/adyen-web/dist/adyen.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<Router><App /></Router>, rootElement);"],"sourceRoot":""}